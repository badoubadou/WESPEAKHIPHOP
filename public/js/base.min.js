(function() {
  window.module = window.module || {};

}).call(this);

(function() {
  var logo;

  logo = class logo {
    constructor(spiner) {
      this.spiner = spiner;
      TweenLite.set('svg', {
        visibility: 'visible'
      });
      MorphSVGPlugin.convertToPath('line');
      this.drawLogoWhite = new TimelineMax({
        paused: true
      });
      this.drawLogoWhite.from("#logowhite #mask1_2_", 1, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }).from("#logowhite #mask2", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.1).from("#logowhite #mask3", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.2).from("#logowhite #mask4", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.3).from("#logowhite #mask5", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.4).from("#logowhite #mask6", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.5).from("#logowhite #mask7", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.6).from("#logowhite #mask8", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.7).from("#logowhite #mask9", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.8).from("#logowhite #mask10", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.9).from("#logowhite #mask11", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 1).from("#logowhite #mask12", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 1.1).from("#logowhite #mask13", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 1.2);
      this.dLB = new TimelineMax({
        paused: true
      });
      this.dLB.from("#mask1_2_black", 1, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }).from("#mask2_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.1).from("#mask3_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.2).from("#mask4_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.3).from("#mask5_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.4).from("#mask6_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.5).from("#mask7_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.6).from("#mask8_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.7).from("#mask9_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.8).from("#mask10_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 0.9).from("#mask11_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 1).from("#mask12_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 1.1).from("#mask13_black", 1.3, {
        drawSVG: 0,
        ease: Power1.easeInOut
      }, 1.2);
      this.bindEvents();
    }

    showLogoBlack() {
      return this.dLB.play();
    }

    showLogoWhite() {
      return this.drawLogoWhite.play();
    }

    hideLogoWhite() {
      return this.drawLogoWhite.reverse();
    }

    bindEvents() {
      var that;
      that = this;
      $('#logowhite').on('showLogo', function() {
        return that.showLogoWhite();
      });
      $('#logowhite').on('hideLogo', function() {
        return that.hideLogoWhite();
      });
      return $('.logoWSH').on('showLogo', function() {
        console.log('show logo');
        return that.showLogoBlack();
      });
    }

  };

  module.logo = logo;

}).call(this);

(function() {
  var player_video_youtube;

  player_video_youtube = class player_video_youtube {
    constructor($container) {
      this.$container = $container;
      this.playerYT = null;
      this.drawLogo = null;
      this.intro_is_done = false;
      this.bildIntroYoutube();
      this.bindEvents();
    }

    playYTisReady() {
      $('.lds-dual-ring').trigger('hidespiner');
      console.log('trigger hide player YT ready ');
      $('.intro_page .hidden').removeClass('hidden');
      return this.playerYT.play();
    }

    bildIntroYoutube() {
      var random, randomid, that;
      that = this;
      random = Math.floor(Math.random() * 4);
      randomid = $('#idIntroYoutube input:eq(' + random + ')').val();
      return $('#playerYT').attr('data-plyr-embed-id', randomid);
    }

    startSite(that) {
      console.log('startSite');
      return $('#logowhite').trigger('showLogo');
    }

    YouTubeGetID(url) {
      var ID;
      ID = '';
      url = url.replace(/(>|<)/gi, '').split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/)/);
      if (url[2] !== void 0) {
        ID = url[2].split(/[^0-9a-z_\-]/i);
        return ID = ID[0];
      } else {
        ID = url;
        return ID;
      }
    }

    bindEvents() {
      var GoInFullscreen, GoOutFullscreen, IsFullScreenCurrently, controls, that, vid_intro_finished;
      that = this;
      if (!$('body').hasClass('doc-ready')) {
        $('body').on('doc-ready', function() {
          console.log('doc-ready');
          return that.startSite(that);
        });
      } else {
        console.log('doc already ready');
        that.startSite(that);
      }
      //------------------- ENTER SITE -------------------#
      $('#enter_site').on('click', function(e) {
        e.preventDefault();
        that.intro_is_done = true;
        console.log('enter site --------------------------------');
        $('.intro_page').addClass('hidden');
        $('.video-container').removeClass('hidden hide');
        GoInFullscreen($('body').get(0));
        TweenMax.delayedCall(4, function() {
          $('#logowhite').trigger('hideLogo');
        });
        that.playerYT.play();
      });
      //------------------- SOUND ---------------------------#
      $('#sound').on('click', function() {
        var event_name;
        console.log('click sound');
        event_name = 'sound_on';
        if ($('#sound').hasClass('actif')) {
          event_name = 'sound_off';
        }
        $(this).trigger(event_name);
        console.log(event_name);
        return $('#sound').toggleClass('actif');
      });
      //------------------- FULL SCREEN ---------------------------#				
      GoInFullscreen = function(element) {
        $('#fullscreen').addClass('actiffullscreen');
        if (element.requestFullscreen) {
          element.requestFullscreen();
        } else if (element.mozRequestFullScreen) {
          element.mozRequestFullScreen();
        } else if (element.webkitRequestFullscreen) {
          element.webkitRequestFullscreen();
        } else if (element.msRequestFullscreen) {
          element.msRequestFullscreen();
        }
      };
      GoOutFullscreen = function() {
        $('#fullscreen').removeClass('actiffullscreen');
        if (document.exitFullscreen) {
          document.exitFullscreen();
        } else if (document.mozCancelFullScreen) {
          document.mozCancelFullScreen();
        } else if (document.webkitExitFullscreen) {
          document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
          document.msExitFullscreen();
        }
      };
      IsFullScreenCurrently = function() {
        var full_screen_element;
        full_screen_element = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || null;
        // If no element is in full-screen
        if (full_screen_element === null) {
          return false;
        } else {
          return true;
        }
      };
      $('#fullscreen').on({
        'click': function() {
          if (!IsFullScreenCurrently()) {
            return GoInFullscreen($('body').get(0));
          } else {
            return GoOutFullscreen();
          }
        }
      });
      //------------------- PLAYER YOUTUBE -------------------#
      controls = '<div class="plyr__controls"> <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play"> <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg> <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg> <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span> <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span> </button> <div class="plyr__progress"> <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek"> <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress> <span role="tooltip" class="plyr__tooltip">00:00</span> </div> <button type="button" class="plyr__control" data-plyr="fullscreen"> <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-exit-fullscreen"></use></svg> <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-enter-fullscreen"></use></svg> <span class="label--pressed plyr__tooltip" role="tooltip">Exit fullscreen</span> <span class="label--not-pressed plyr__tooltip" role="tooltip">Enter fullscreen</span> </button> </div>';
      this.playerYT = new Plyr('#playerYT', {controls});
      
      //------------------- PLAYER YOUTUBE IS READY -------------------#
      this.playerYT.on('ready', function(event) {
        console.log('playYTisReady');
        that.playYTisReady();
      });
      // $('.video-container').addClass 'hidden hide'
      this.playerYT.on('statechange', function(event) {
        console.log('on play YOUTUBE etat de l intro event : ' + event.detail.code);
        if (event.detail.code === 1) {
          $('.video-container').removeClass('trans');
        } else {
          $('.video-container').addClass('trans');
        }
      });
      
      //------------------- STOP PLAYER WHEN CLOSE POPIN -------------------#

      // if that.intro_is_done
      // 	$('.video-container').removeClass 'hidden hide'
      $('#popin').on('closePopin', function() {
        console.log('------------ > closePopin stop player YOUTUBE');
        $('.video-container').addClass('trans');
        return that.playerYT.stop();
      });
      //------------------- INTRO FINISHED -------------------#
      vid_intro_finished = function() {
        console.log('vid_intro_finished ----- trigger end Intro trigger close  Popin');
        $('#popin').addClass('hide').trigger('endIntro').trigger('closePopin').trigger('classChange');
        $('.skip_intro').remove();
        $('#close').removeClass('hide');
      };
      $('.skip_intro').on('click', function() {
        vid_intro_finished();
      });
      this.playerYT.on('ended', function(event) {
        vid_intro_finished();
      });
      //------------------- CLICK LIST ARTIST -------------------#
      return $('#list_artists li a, #play-video-btn, #play-video-btn-mobile, #startvideo, a.watch').on('click', function(event) {
        var idyoutube;
        event.preventDefault();
        idyoutube = that.YouTubeGetID($(this).attr('href'));
        if (!$('#artist_info').hasClass('hide')) {
          $('#artist_info').addClass('hide');
        }
        // $('.lds-dual-ring').removeClass 'done'
        console.log('trigger show on click');
        $('.lds-dual-ring').trigger('showspiner');
        console.log('trigger show');
        window.currentArtist = $('#artist_info .info:not(.hide)').index();
        that.playerYT.source = {
          type: 'video',
          sources: [
            {
              src: idyoutube,
              provider: 'youtube'
            }
          ]
        };
        $('#popin').removeClass('hide').trigger('classChange');
      });
    }

  };

  module.player_video_youtube = player_video_youtube;

}).call(this);

(function() {
  var popin;

  popin = class popin {
    constructor() {
      this.timelinePopin = null;
      this.bindEvents();
    }

    afterclose() {
      console.log('afterclose');
      $('#popin').addClass('hide').trigger('classChange');
      $('#popin').removeAttr('style');
      $('#popin').find('*').removeAttr('style');
      $('.video-container, #abouttxt, #artist_info, #shareinfo, #logowhite').addClass('hide');
      $('#popin').trigger('closePopin');
      return console.log('close popin');
    }

    closePopin() {
      if (this.timelinePopin) {
        return this.timelinePopin.reverse();
      } else {
        return $('#popin').addClass('hide').trigger('classChange');
      }
    }

    bindEvents() {
      var showPopin, that;
      that = this;
      showPopin = function($target) {
        console.log($target + '$target$target$target');
        $('.video-container, #abouttxt, #artist_info, #shareinfo, #logowhite').addClass('hide');
        $('#popin').toggleClass('hide').trigger('classChange');
        $($target).removeClass('hide');
        that.timelinePopin = new TimelineMax({
          onReverseComplete: that.afterclose
        });
        return that.timelinePopin.from('#popin', .6, {
          opacity: 0,
          ease: Power3.easeOut
        }).fromTo($target, 0.5, {
          alpha: 0,
          marginTop: 30,
          ease: Power1.easeInOut
        }, {
          alpha: 1,
          marginTop: 0
        });
      };
      
      //------------------- ABOUT  --------------------------#
      $('#apropos_btn').on({
        'click': function(e) {
          e.preventDefault();
          return showPopin('#popin #abouttxt');
        }
      });
      $('#about-btn, .block_contry .bio').on({
        'click': function(e) {
          var artistid;
          e.preventDefault();
          if ($("#mode_switcher [data-face='face_pays']").hasClass('selected')) {
            artistid = $(this).data('artistid') - 1;
            console.log('artistid =' + artistid);
            $('#popin #artist_info .info').addClass('hide');
            $('#popin #artist_info .info:eq(' + artistid + ')').removeClass('hide');
            showPopin('#artist_info');
            return;
          }
          return showPopin('#artist_info');
        }
      });
      $('#share').on({
        'click': function(e) {
          e.preventDefault();
          return showPopin('#shareinfo');
        }
      });
      return $('#close, #back').on('click', function() {
        return that.closePopin();
      });
    }

  };

  module.popin = popin;

}).call(this);

(function() {
  var player_video;

  player_video = class player_video {
    constructor($container) {
      this.$container = $container;
      this.timelineKnob = new TimelineMax({
        paused: true
      });
      this.timelineInfo = new TimelineMax({
        paused: true
      });
      this.timelinePlatine = new TimelineMax({
        paused: true
      });
      this.timelineDisk = new TimelineMax({
        paused: true
      });
      this.setTimeLine();
      this.player = $('#player')[0];
      this.duration = 168.182;
      if (this.player.duration && this.player.duration > 1) {
        console.log('correct duration');
        this.duration = this.player.duration;
      }
      this.disk_speep = 0.39;
      this.sounddirection = 0;
      this.scratchBank = [];
      this.scratchBank.push(new Howl({
        src: ['https://s3.eu-west-3.amazonaws.com/wespeakhiphop-assets/video.mp3'],
        buffer: true
      }));
      this.scratchBank.push(new Howl({
        src: ['https://s3.eu-west-3.amazonaws.com/wespeakhiphop-assets/video_reverse.mp3'],
        buffer: true
      }));
      $('#player').addClass('ready');
      this.loadMap();
      this.createTween();
      this.bindEvents();
    }

    setTimeLine(curentTime) {
      console.log('curentTime : ' + curentTime);
      return this.timelineDisk.from('#block_video_disk', 1.5, {
        rotation: 270,
        opacity: 0,
        scale: 2,
        ease: Power1.easeOut
      }).from('#platine', 1, {
        opacity: 0,
        scale: .8
      }, '-=.5').staggerFrom('#list_artists li', .3, {
        opacity: 0
      }, 0.04).from(['#play-video-btn', '#play-video-btn-mobile', '#pause-video-btn'], .6, {
        opacity: 0
      }).from('#main_footer', .8, {
        y: 40,
        ease: Power3.easeOut
      }).from('#left_col', .8, {
        x: '-100%',
        ease: Power3.easeOut
      }, '-=.8').add(this.show_logo).from('#artists_info', .5, {
        opacity: 0,
        ease: Power3.easeOut
      }, '+=2').from('#smallmap', .6, {
        opacity: 0,
        y: 150,
        ease: Power3.easeOut
      }).from('#txt_help_disk', .8, {
        opacity: 0,
        left: '-100%',
        ease: Power3.easeOut
      }).add(this.show_tuto, '+=2').from('.tuto', .6, {
        opacity: 0,
        ease: Power3.easeOut
      }, '+=2');
    }

    // .totalProgress(curentTime || 0)
    showFooter_header() {
      $('body').removeClass('hidefooter');
      return $('body').removeClass('hide_left_col');
    }

    show_logo() {
      return $('.logoWSH').trigger('showLogo');
    }

    show_tuto() {
      return $('.tuto').removeClass('hide');
    }

    loadMap() {
      var that;
      console.log('---> load small map');
      that = this;
      return $.get('https://s3.eu-west-3.amazonaws.com/wespeakhiphop-assets/smallmap-' + $('#langage_short').val() + '.svg', function(data) {
        var div;
        console.log('---> small map loaded');
        div = document.createElement('div');
        div.innerHTML = (new XMLSerializer).serializeToString(data.documentElement);
        $("#smallmap").append(div.innerHTML);
      });
    }

    skipIntro() {
      console.log('skipIntro : player play ------------------------------');
      this.player.play();
      this.timelineDisk.play();
      return $('#popin').off('endIntro');
    }

    changeCurrentTime($deg, $myplayer, dir, speed) {
      var PBR, opositeDirection, percentage, player_new_CT, roundedPBR, sound_new_CT;
      this.$deg = $deg;
      this.$myplayer = $myplayer;
      if (this.$deg < 0) {
        this.$deg = 360 + this.$deg;
      }
      percentage = this.$deg / 3.6;
      player_new_CT = this.$myplayer.duration * (percentage / 100);
      // console.log 'player_new_CT : '+player_new_CT
      this.$myplayer.currentTime = player_new_CT;
      this.sounddirection = dir === 'clockwise' ? 0 : 1;
      opositeDirection = dir === 'clockwise' ? 1 : 0;
      PBR = speed / this.disk_speep;
      PBR = Math.min(Math.max(speed / this.disk_speep, 0.9), 1.2);
      roundedPBR = Number(PBR.toFixed(4));
      
      // console.log dir + '  @sounddirection  : '+@sounddirection  + '  // opositeDirection  : '+opositeDirection+'. speed : '+speed + '  PBR : '+roundedPBR
      this.scratchBank[this.sounddirection].rate(roundedPBR);
      sound_new_CT = dir === 'clockwise' ? player_new_CT : this.$myplayer.duration - player_new_CT;
      if (this.scratchBank[opositeDirection].playing()) {
        this.scratchBank[opositeDirection].stop();
      }
      if (!this.scratchBank[this.sounddirection].playing()) {
        this.scratchBank[this.sounddirection].seek(sound_new_CT);
        return this.scratchBank[this.sounddirection].play();
      }
    }

    skipTo($player, $id) {
      var PBR, checkEndTime, nbVideo, percentageID, player, timeToStop;
      this.$player = $player;
      this.$id = $id;
      nbVideo = 28;
      player = this.$player;
      PBR = 1;
      percentageID = this.$id / nbVideo;
      timeToStop = player.duration() * percentageID;
      checkEndTime = function() {
        if (player.currentTime() < timeToStop && (PBR < 16)) {
          return PBR += 1;
        } else {
          PBR = 1.0;
          return player.off('timeupdate', checkEndTime);
        }
      };
      // player.playbackRate(PBR)
      return this.$player.on('timeupdate', checkEndTime);
    }

    //------------------- TWEEN ---------------------------#
    createTween() {
      var duration_sequence, sequence, that, updateInfo;
      that = this;
      updateInfo = function(id) {
        var svgcontry;
        $('#play-video-btn, #play-video-btn-mobile, #startvideo').attr('href', $('#list_artists li:eq(' + id + ') a').attr('href'));
        $('#list_artists li a.selected').removeClass('selected');
        $('#list_artists li:eq(' + id + ') a').addClass('selected');
        svgcontry = '#smallmap svg #' + $('#artists_info li:eq(' + id + ') .contry').data('contrynicename');
        TweenMax.to(['#smallmap svg .smallmap-fr-st1', '#smallmap svg .smallmap-en-st1'], 0.5, {
          alpha: 0
        });
        TweenMax.to(svgcontry, 0.5, {
          scale: 3,
          transformOrigin: '50% 50%',
          repeat: -1,
          yoyo: true
        });
        TweenMax.to(svgcontry, 0.5, {
          alpha: 1
        }, '+=.5');
        $('#artists_info li').addClass('hide');
        $('#artists_info li:eq(' + id + ')').removeClass('hide');
        $('#popin #artist_info .info').addClass('hide');
        return $('#popin #artist_info .info:eq(' + id + ')').removeClass('hide');
      };
      duration_sequence = this.duration / 28;
      sequence = '+=' + (duration_sequence - 1);
      this.timelineKnob = TweenMax.to('#knob', this.duration, {
        ease: Linear.easeNone,
        rotation: 360,
        repeat: -1,
        paused: true
      });
      this.timelinePlatine = TweenMax.to('#platine', this.duration, {
        ease: Linear.easeNone,
        rotation: 360,
        repeat: -1,
        paused: true
      });
      return this.timelineInfo.add(function() {
        return updateInfo(0);
      }).fromTo('#artists_info li:eq(0) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(0) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(1);
      }).fromTo('#artists_info li:eq(1) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(1) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(2);
      }).fromTo('#artists_info li:eq(2) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(2) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(3);
      }).fromTo('#artists_info li:eq(3) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(3) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(4);
      }).fromTo('#artists_info li:eq(4) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(4) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(5);
      }).fromTo('#artists_info li:eq(5) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(5) .warper', 0.5, {
        alpha: 0
      }, sequence).add(function() {
        return updateInfo(6);
      }).fromTo('#artists_info li:eq(6) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(6) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(7);
      }).fromTo('#artists_info li:eq(7) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(7) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(8);
      }).fromTo('#artists_info li:eq(8) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(8) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(9);
      }).fromTo('#artists_info li:eq(9) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(9) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(10);
      }).fromTo('#artists_info li:eq(10) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(10) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(11);
      }).fromTo('#artists_info li:eq(11) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(11) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(12);
      }).fromTo('#artists_info li:eq(12) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(12) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(13);
      }).fromTo('#artists_info li:eq(13) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(13) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(14);
      }).fromTo('#artists_info li:eq(14) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(14) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(15);
      }).fromTo('#artists_info li:eq(15) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(15) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(16);
      }).fromTo('#artists_info li:eq(16) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(16) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(17);
      }).fromTo('#artists_info li:eq(17) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(17) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(18);
      }).fromTo('#artists_info li:eq(18) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(18) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(19);
      }).fromTo('#artists_info li:eq(19) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(19) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(20);
      }).fromTo('#artists_info li:eq(20) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(20) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(21);
      }).fromTo('#artists_info li:eq(21) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(21) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(22);
      }).fromTo('#artists_info li:eq(22) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(22) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(23);
      }).fromTo('#artists_info li:eq(23) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(23) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(24);
      }).fromTo('#artists_info li:eq(24) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(24) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(25);
      }).fromTo('#artists_info li:eq(25) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(25) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(26);
      }).fromTo('#artists_info li:eq(26) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(26) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(27);
      }).fromTo('#artists_info li:eq(27) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(27) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence).add(function() {
        return updateInfo(28);
      }).fromTo('#artists_info li:eq(28) .warper', 0.5, {
        alpha: 0,
        marginTop: 30,
        ease: Power1.easeInOut
      }, {
        alpha: 1,
        marginTop: 0
      }).to('#artists_info li:eq(28) .warper', 0.5, {
        alpha: 0,
        marginTop: -30
      }, sequence);
    }

    bindEvents() {
      var previousRotation, rotationSnap, that, windowBlurred, windowFocused;
      that = this;
      console.log('bindEvents player_video');
      $(window).on('resizeEnd', function() {});
      
      //------------------- END TUTO -------------------#
      // if !that.timelineDisk
      // 	return 
      // curentTime = that.timelineDisk.totalProgress()
      // console.log 'resized  = '+curentTime
      // that.timelineDisk.clear()
      // # that.setTimeLine(curentTime)
      // that.timelineDisk.play(0)
      $('.btn_get_it').on('click', function() {
        return $('.tuto').remove();
      });
      //------------------- ENDINTRO -------------------#
      $('#popin').on('endIntro', function() {
        console.log('--------------------------- end intro');
        return that.skipIntro();
      });
      //------------------- POPIN LISTNER -------------------#
      $('#popin').on('classChange', function() {
        console.log('->>>>>>>>>>>>>>>>>>>>>>> popin change ' + ($(this).hasClass('hide')));
        if ($(this).hasClass('hide')) {
          if ($("#mode_switcher [data-face='face_pays']").hasClass('selected')) {
            return;
          }
          if (that.player) {
            that.player.play();
          }
        } else {
          if (that.player) {
            that.player.pause();
          }
        }
      });
      //------------------- FOCUS ---------------------------#
      windowBlurred = function() {
        console.log('blur');
        if (that.player) {
          that.player.pause();
        }
      };
      windowFocused = function() {
        console.log('focus');
        if ($('body').hasClass('video-disk-waiting')) {
          console.log('hasClass video-disk-waiting');
          return;
        }
        if (!$('#popin').hasClass('hide')) {
          console.log('popin hasNotClass hide');
          return;
        }
        if ($('#contrys').hasClass('selected')) {
          console.log('contrys hasClass selected');
          return;
        }
        if (that.player) {
          console.log('play video');
          if ($('#pause-video-btn').hasClass('paused')) {
            return;
          }
          that.player.play();
        }
      };
      $(window).on('pagehide blur', windowBlurred);
      $(window).on('pageshow focus', windowFocused);
      //------------------- SOUND ---------------------------#
      $('#sound').on('sound_off', function() {
        return that.player.muted = true;
      });
      $('#sound').on('sound_on', function() {
        console.log('sound_on' + that.player.muted);
        return that.player.muted = false;
      });
      //------------------- SOUND ---------------------------#
      $('#pause-video-btn').on('click', function() {
        if ($(this).hasClass('paused')) {
          that.player.play();
          return $(this).removeClass('paused');
        } else {
          that.player.pause();
          return $(this).addClass('paused');
        }
      });
      
      //------------------- PLAYER JS ---------------------------#		
      $('#player').on('play', function(e) {
        console.log('play video disk');
        $('body').removeClass('video-disk-waiting');
        if ($("#mode_switcher [data-face='face_pays']").hasClass('selected')) {
          that.player.pause();
          return;
        }
        that.timelineInfo.play();
        that.timelineKnob.play();
        that.timelinePlatine.play();
        // $('.lds-dual-ring').addClass('done')
        console.log('trigger hide on player Js play ');
        return $('.lds-dual-ring').trigger('hidespiner');
      });
      $('#player').on('pause', function() {
        console.log('pause' + that.timelineKnob);
        that.timelineInfo.pause();
        that.timelineKnob.pause();
        return that.timelinePlatine.pause();
      });
      $('#player').on('seeked', function() {
        return that.timelineInfo.time(that.player.currentTime);
      });
      rotationSnap = 360 / 28;
      previousRotation = 0;
      Draggable.create('#knob', {
        type: 'rotation',
        throwProps: true,
        onRelease: function() {
          if (!$('#knob').hasClass('drag')) {
            that.timelineKnob = TweenMax.fromTo('#knob', that.duration, {
              rotation: this.rotation % 360
            }, {
              ease: Linear.easeNone,
              rotation: (this.rotation % 360) + 360,
              repeat: -1
            });
            return $('#knob').removeClass('drag');
          }
        },
        onDrag: function() {
          var dir, roundedSpeed, speed, yourDraggable;
          $('#knob').addClass('drag');
          yourDraggable = Draggable.get('#knob');
          dir = yourDraggable.rotation - previousRotation > 0 ? 'clockwise' : 'counter-clockwise';
          speed = Number(Math.abs(yourDraggable.rotation - previousRotation));
          roundedSpeed = Number(speed.toFixed(4));
          previousRotation = yourDraggable.rotation;
          return that.changeCurrentTime(this.rotation % 360, that.player, dir, roundedSpeed);
        },
        onThrowUpdate: function() {
          return that.changeCurrentTime(this.rotation % 360, that.player, 'clockwise', that.disk_speep);
        },
        onThrowComplete: function() {
          that.timelineKnob = TweenMax.fromTo('#knob', that.duration, {
            rotation: this.rotation % 360
          }, {
            ease: Linear.easeNone,
            rotation: (this.rotation % 360) + 360,
            repeat: -1
          });
          that.player.play();
          that.scratchBank[0].stop();
          that.scratchBank[1].stop();
          return $('#knob').removeClass('drag');
        },
        snap: function(endValue) {
          return Math.round(endValue / rotationSnap) * rotationSnap;
        }
      });
    }

  };

  module.player_video = player_video;

}).call(this);

(function() {
  var spiner;

  spiner = class spiner {
    constructor(spiner1) {
      this.spiner = spiner1;
      this.timelineSpiner = new TimelineMax({
        paused: true,
        onReverseComplete: this.maskSpiner,
        onStart: this.unmaskSpiner
      }).to('.lds-dual-ring .ring_black', 2, {
        scale: 0,
        ease: Power3.easeOut
      });
      this.bindEvents();
      this.showSpiner();
    }

    maskSpiner() {
      return $('.lds-dual-ring').hide();
    }

    unmaskSpiner() {
      return $('.lds-dual-ring').show();
    }

    showSpiner() {
      var that;
      that = this;
      return this.timelineSpiner.play();
    }

    hideSpiner() {
      var that;
      that = this;
      return that.timelineSpiner.reverse();
    }

    bindEvents() {
      var that;
      that = this;
      that.spiner.on('hidespiner', function() {
        return that.hideSpiner();
      });
      return that.spiner.on('showspiner', function() {
        return that.showSpiner();
      });
    }

  };

  module.spiner = spiner;

}).call(this);

(function() {
  var init;

  window.isMobile = function() {
    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;
  };

  init = function() {
    var logo, player_video, player_video_youtube, popin, spiner;
    console.log('window load -> init');
    player_video_youtube = new module.player_video_youtube();
    spiner = new module.spiner($('.lds-dual-ring'));
    popin = new module.popin();
    logo = new module.logo();
    $('body').addClass('doc-ready');
    $('body').trigger('doc-ready');
    window.layout = window.currentLayout();
    console.log('layout : ' + layout);
    if (window.isMobile()) {
      return player_video = new module.player_video();
    }
  };

  $(window).load(init);

  window.currentLayout = function() {
    console.log('--------------- > ' + $('#checklayout .desktop').css('display'));
    if ($('#checklayout .mobile').css('display') === 'block') {
      return 'mobile';
    }
    if ($('#checklayout .ipad').css('display') === 'block') {
      return 'ipad';
    }
    if ($('#checklayout .desktop').css('display') === 'block') {
      return 'desktop';
    }
  };

  $(window).on('resize', function() {
    if (this.resizeTO) {
      clearTimeout(this.resizeTO);
    }
    this.resizeTO = setTimeout((function() {
      var layout;
      console.log(window.layout + '!=' + window.currentLayout());
      if (layout !== currentLayout()) {
        layout = currentLayout();
        $(this).trigger('resizeEnd');
      }
    }), 500);
  });

}).call(this);
